name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'The type of version to release (alpha | beta | release)'
        default: 'alpha'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle Caches
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Setup Gradle Wrapper
        run: chmod +x gradlew

      - name: Get Version and Platform
        id: properties
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: ./gradle.properties
          properties: "version enabledPlatforms minecraftVersion"

#      - name: Upload Forge Releases (Curse|Modrinth|Github)
#        id: forge_release
#        if: contains(steps.properties.outputs.enabledPlatforms, 'forge')
#        uses: Kir-Antipov/mc-publish@v3.3.0
#        with:
#          curseforge-id: ${{ vars.CURSE_ID }}
#          curseforge-token: ${{ secrets.CURSE_TOKEN }}
#
#          modrinth-id: ${{ vars.MODRINTH_ID }}
#          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
#
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          github-generate-changelog: true
#          github-tag: ${{ steps.properties.outputs.minecraftVersion }}-${{ steps.properties.outputs.version }}
#
#          files: ./forge/build/libs/!(*-@(dev|sources|dev-shadow)).jar
#          name: [ Forge ] Cosmic Rocketry ${{ steps.properties.outputs.version }}"
#          version: ${{ steps.properties.outputs.version }}
#          version-type: ${{ inputs.version_type }}
#          changelog-file: changelog.md
#          loaders: forge
#          game-versions: ${{ steps.properties.outputs.minecraftVersion }}
#          version-resolver: exact
#
#          curseforge-dependencies: |
#            resourceful-lib | depends | *
#            resourceful-config | depends | *
#            botarium | depends | *
#            ad-astra | depends | *
#          modrinth-dependencies: |
#            resourceful-lib | depends | *
#            resourceful-config | depends | *
#            botarium | depends | *
#            ad-astra | depends | *

#      - name: Upload Fabric Releases (Curse|Modrinth|Github)
#        id: fabric_release
#        if: contains(steps.properties.outputs.enabledPlatforms, 'fabric')
#        uses: Kir-Antipov/mc-publish@v3.3.0
#        with:
#          curseforge-id: ${{ vars.CURSE_ID }}
#          curseforge-token: ${{ secrets.CURSE_TOKEN }}
#
#          modrinth-id: ${{ vars.MODRINTH_ID }}
#          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
#
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          github-generate-changelog: true
#          github-tag: ${{ steps.properties.outputs.minecraftVersion }}-${{ steps.properties.outputs.version }}
#
#          files: ./fabric/build/libs/!(*-@(dev|sources|dev-shadow)).jar
#          name: [ Fabric ] Cosmic Rocketry ${{ steps.properties.outputs.version }}"
#          version: ${{ steps.properties.outputs.version }}
#          version-type: ${{ inputs.version_type }}
#          changelog-file: changelog.md
#          loaders: fabric
#          game-versions: ${{ steps.properties.outputs.minecraftVersion }}
#          version-resolver: exact
#
#          curseforge-dependencies: |
#            resourceful-lib | depends | *
#            resourceful-config | depends | *
#            botarium | depends | *
#            ad-astra | depends | *
#          modrinth-dependencies: |
#            resourceful-lib | depends | *
#            resourceful-config | depends | *
#            botarium | depends | *
#            ad-astra | depends | *

#      - name: Generate Discord Embed
#        run: ./gradlew injectEmbed
#        env:
#          FORGE_RELEASE_URL: ${{ steps.forge_release.outputs.modrinth-version }}
#          FABRIC_RELEASE_URL: ${{ steps.fabric_release.outputs.modrinth-version }}
#
#      - name: Upload Discord Embed
#        uses: tsickert/discord-webhook@v5.3.0
#        with:
#          webhook-url: ${{ secrets.WEBHOOK_URL }}
#          raw-data: ./build/embed.json